#===========================================================
# MacOS
#===========================================================
is_darwin() {
  uname | grep "Darwin" > /dev/null
  return $?
}

#===========================================================
# bash
#===========================================================
if is_darwin; then
  if [ -f $(/opt/homebrew/bin/brew --prefix)/etc/bash_completion ]; then
    . $(/opt/homebrew/bin/brew --prefix)/etc/bash_completion
  fi
fi

#===========================================================
# history
#===========================================================
HISTSIZE=50000
export PROMPT_COMMAND='history -a; history -r'
HISTCONTROL=erasedups

#===========================================================
# Zellij 
#===========================================================
alias zellij='zellij options --simplified-ui true --no-pane-frames'

#===========================================================
# Go
#===========================================================
export GOPATH=$HOME/.go
export GO111MODULE=on

#===========================================================
# Prompt
#===========================================================
if is_darwin; then
  PS1='[\W]\$ '
fi

#===========================================================
# Homebrew
#===========================================================
if is_darwin; then
  eval $(/opt/homebrew/bin/brew shellenv)
fi

#===========================================================
# Docker
#===========================================================
PATH=$PATH:/usr/local/bin

#===========================================================
# ls
#===========================================================
alias ls='ls -G'
alias ll='ls -lG'

#===========================================================
# Ruby 
#===========================================================
alias bip='bundle install --path vendor/bundle'
alias ber='bundle exec ruby'
alias be='bundle exec'
export PATH="/opt/homebrew/opt/ruby/bin:$PATH"

#===========================================================
# vi 
#===========================================================
alias vi='vim'

#===========================================================
# Python 
#===========================================================
alias mypy='mypy --ignore-missing-imports'

if which python3 > /dev/null; then
  alias python='python3'
fi

if which pip3 > /dev/null; then
  alias pip='pip3'
fi

if is_darwin; then
  export LC_ALL=ja_JP.UTF-8
fi

# For pyenv
# export PYENV_ROOT="$HOME/.pyenv"
# export PATH="$PYENV_ROOT/bin:$PATH"
# eval "$(pyenv init -)"

# For pipenv
export PIPENV_VENV_IN_PROJECT=1

#===========================================================
# fzf 
#===========================================================
alias h='fzf_history'
alias c='fzf_cd'
alias w='fzf_tmux_window'

fzf_exists() {
  which fzf > /dev/null
  if [ $? -ne 0 ]; then
    echo "Please install fzf"
    return 1
  fi
}

fzf_history() {
  fzf_exists
  local res=$(history | awk '{$1=""; print}' | sort | uniq | fzf)
  READLINE_LINE=$res
  READLINE_POINT=${#res}

  # For osx
  if [ `uname` = "Darwin" ]; then
      ${READLINE_LINE}
  fi
}

fzf_cd() {
  fzf_exists
  fasd_exists
  local res=$(fasd -d | sort -rn | cut -c 12- | fzf)
  if [ -n "$res" ]; then
    cd $res
  else
    return 1
  fi
}

fzf_tmux_window() {
  fzf_exists
  tmux list-windows | fzf | awk -F':' '{print $1}' | xargs tmux select-window -t
}

fzf_tmux_pane() {
  fzf_exists
  tmux list-panes | fzf | awk -F':' '{print $1}' | xargs tmux select-pane -t
}

#===========================================================
# Direnv 
#===========================================================
if which direnv > /dev/null; then
  eval "$(direnv hook bash)"
fi

#===========================================================
# fasd 
#===========================================================
if which fasd > /dev/null; then
  eval "$(fasd --init auto)"
fi

fasd_exists() {
  which fasd > /dev/null
  if [ $? -ne 0 ]; then
    echo "Please install fasd"
    return 1
  fi
}

#===========================================================
# psql 
#===========================================================
export PATH=/opt/homebrew/Cellar/libpq/14.1/bin/:$PATH


#===========================================================
# tmux 
#===========================================================
ide() {
  tmux split-window -v
  tmux resize-pane -D 15
  tmux select-pane -t 0
}
